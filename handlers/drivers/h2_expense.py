from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

from services.google_sheets import add_record


router = Router()


class ExpenseStates(StatesGroup):
    """–æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    waiting_for_amount_and_comment = State()


@router.message(F.text == "üí∏ –†–∞—Å—Ö–æ–¥")
async def expense_start(message: Message, state: FSMContext):
    """–Ω–∞—á–∞–ª–æ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–∞"""
    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (—á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª):\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n`150 –º–æ–π–∫–∞ –º–∞—à–∏–Ω—ã`",
        reply_markup=ReplyKeyboardRemove(),
        parse_mode="Markdown"
    )
    await state.set_state(ExpenseStates.waiting_for_amount_and_comment)


@router.message(ExpenseStates.waiting_for_amount_and_comment)
async def expense_received(message: Message, state: FSMContext):
    """–ø–æ–ª—É—á–µ–Ω–∏–µ —Å—É–º–º—ã –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è"""
    text = message.text.strip()
    parts = text.split(" ", 1)


    try:
        amount = float(parts[0].replace(",", "."))
        comment = parts[1] if len(parts) > 1 else ""

        add_record(
            user_id=message.from_user.id,
            username=message.from_user.full_name,
            record_type='—Ä–∞—Å—Ö–æ–¥',
            subcategory="-",
            amount=amount,
            comment=comment
        )

        await message.answer(f"‚úÖ –†–∞—Å—Ö–æ–¥ —Å–æ—Ö—Ä–∞–Ω—ë–Ω:\n–°—É–º–º–∞: {amount}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}")
        await state.clear()

    except ValueError:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥: `150 –º–æ–π–∫–∞ –º–∞—à–∏–Ω—ã`")