import pandas as pd
from aiogram import Router, F
from aiogram.types import Message, FSInputFile
from datetime import datetime
from services.google_sheets import get_all_data
from keyboards.reply import reply_export_period_keyboard

router = Router()

@router.message(F.text == "üì• –í—ã–≥—Ä—É–∑–∫–∞")
async def handle_export_request(message: Message):
    """–º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏"""
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", reply_markup=reply_export_period_keyboard())


@router.message(F.text.in_(["üìÖ –ó–∞ –¥–µ–Ω—å", "üóì –ó–∞ –º–µ—Å—è—Ü", "‚ôæ –ó–∞ –≤—Å—ë –≤—Ä–µ–º—è"]))
async def handle_export_period(message: Message):
    """–≤—ã–≥—Ä—É–∑–∫–∞ Excel –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø–µ—Ä–∏–æ–¥—É —Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    all_data = get_all_data()

    columns = [col.strip().lower() for col in all_data[0]]
    df = pd.DataFrame(all_data[1:], columns=columns)

    now = datetime.now()
    period_text = message.text

    if period_text == "üìÖ –ó–∞ –¥–µ–Ω—å":
        df = df[df['–¥–∞—Ç–∞'] == now.strftime("%d.%m.%Y")]
        file_name = f"export_day_{now.strftime('%Y-%m-%d')}.xlsx"

    elif period_text == "üóì –ó–∞ –º–µ—Å—è—Ü":
        month_year = now.strftime("%m.%Y")
        df = df[df['–¥–∞—Ç–∞'].str.endswith(month_year)]
        file_name = f"export_month_{now.strftime('%Y-%m')}.xlsx"

    else:
        file_name = f"export_all_{now.strftime('%Y-%m-%d')}.xlsx"

    if df.empty:
        await message.answer("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.")
        return

    with pd.ExcelWriter(file_name, engine="xlsxwriter") as writer:
        df.to_excel(writer, sheet_name="–í—Å–µ –∑–∞–ø–∏—Å–∏", index=False)

        for user, user_df in df.groupby("–∏–º—è"):
            user_df.to_excel(writer, sheet_name=str(user)[:31], index=False)

        summary = (
            df.groupby("–∏–º—è")["—Å—É–º–º–∞"]
            .apply(lambda x: pd.to_numeric(x, errors='coerce').sum())
            .reset_index()
        )
        summary.rename(columns={"—Å—É–º–º–∞": "–ò—Ç–æ–≥–æ"}, inplace=True)
        summary.to_excel(writer, sheet_name="–°–≤–æ–¥–∫–∞", index=False)

    await message.answer_document(
        FSInputFile(file_name),
        caption=f"–í—ã–≥—Ä—É–∑–∫–∞: {period_text}"
    )
